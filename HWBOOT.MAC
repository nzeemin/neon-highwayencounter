	.TITLE	HWBOOT
	.MCALL	.SETTOP, .EXIT, .LOOKUP, .READW, .CLOSE

WINTOP = 32.		; Верхняя строка окна
WINLFT = 9.		; Левая колонка окна
SCRHEI = 256.

SCREEN = 100000

HWLZST = 140000 - <<HWLZSZ+1>/2 * 2>	; Адрес с которого грузим сжатый код

;------------------------------------------------------------------------------

; Добавляем эти строчки, чтобы в готовом файле была видна версия
	.ASCII	|HWYENC PK-11/16 |
.INCLUDE /VERSIO.MAC/
	.EVEN

;------------------------------------------------------------------------------

; https://github.com/purplesyringa/lzsa3
; Optimized LZSA3 decompressor for PDP-11 by Manwe and Ivanq. Thanks to Ivan Gorodetsky
; Usage: MOV #src_adr,R1 / MOV #dst_adr,R2 / CALL UNLZSA
UNLZSA:
	CLR R5				; no nibbles sign
10$:	MOVB (R1)+,R3			; read token
;Liter:
20$:	MOV R3,R0
	BIC #177774,R0			; get 2 bits
	BEQ 30$
	CMP R0,#3			; literals length
	BNE 25$
	CALL 110$
25$:	MOVB (R1)+,(R2)+		; literals length in R0
	SOB R0,25$
;Decode:
30$:	MOV R3,-(SP)
	ROLB R3				; get 2 bits
	ROL R0
	ROLB R3
	ROL R0
	ASL R0
	ADD R0,PC			; run subroutine
	BR 90$
	BR 70$
	BR 80$
;o5bit:
40$:	CALL 100$			; get nibble in R0
	ROLB R3
	ROL R0
	INC R0
;Save:
50$:	MOV R0,R4			; save offset for future
;Match:
55$:	MOV (SP)+,R0
	ASR R0
	ASR R0
	BIC #177770,R0			; get 3 bits
	CMP R0,#7
	BNE 60$
	CALL 110$
	TSTB R0				; match length
	BEQ 120$
;Clone:
60$:	MOV R2,R3
	SUB R4,R3
	MOVB (R3)+,(R2)+
	INC R0
61$:	MOVB (R3)+,(R2)+
	SOB R0,61$
	BR 10$
;o9bit:
70$:	CLR R0
	BISB (R1)+,R0
	ROLB R3
	ROL R0
	INC R0
	BR 50$
;o13bit:
80$:	CALL 100$ 			; get nibble in R0
	ROLB R3
	ROL R0
	SWAB R0
	BISB (R1)+,R0			; 8 bits
	ADD #513.,R0
	BR 50$
;oOther:
90$:	ROLB R3
	BCS 55$
	BISB (R1)+,R0			; read 16 bits
	SWAB R0
	BISB (R1)+,R0
	BR 50$
;Nibble:
100$:	COM R5
	BMI 101$
	MOV R5,R0
	CLR R5
	BR 102$
101$:	BICB (R1)+,R5			; read 2 nibbles
	MOV R5,R0
	ASR R0
	ASR R0
	ASR R0
	ASR R0
102$:	BIC #177760,R0			; leave 4 low bits
	RETURN
;Extend:
110$:	MOV R0,-(SP)			; save original value
	CALL 100$ 			; get nibble in R0
	BNE 112$
	BISB (R1)+,R0
	BNE 111$
	; unnecessary for short files
	BISB (R1)+,R0			; read high byte
	SWAB R0
	BISB (R1)+,R0			; read low byte
	TST (SP)+			; skip saved R0
	RETURN
111$:	ADD #15.,R0
112$:	DEC R0
	ADD (SP)+,R0			; add original value
;Exit:
120$:	RETURN

;------------------------------------------------------------------------------

STBOOT:
	MTPS	#340			; disable all interruptions
	MOV	@#161230, @#UR4BAK	; Сохраняем исходное значение UR4
	MOV	@#161232, @#UR5BAK	; и UR5

; Определяем верхнюю границу памяти
	.SETTOP	#137776
	CMP	#137776, R0
	BHIS	11$
	MOV	#MEMERR,@#177566
	NOP	;!
	.EXIT
11$:
; Загружаем сжатый экран
	CALL	LOASCR

; Выделить память под экран 16K
	MOVB	#'1, @#<ERRTXT+6>
	MOV	#2, @#174200		; GET8K
	BCC	10$
	JMP	ERROR			; C=1 - ошибка
10$:
	MOV	R0, @#SCRUR4		; Сохраняем номер блока 0 для экрана
	MOV	R0, @#161230		; включаем новый блок в UR4
	ADD	#000040, R0		; следующий блок
	MOV	R0, @#SCRUR5		; Сохраняем номер блока 1 для экрана
	MOV	R0, @#161232		; включаем новый блок в UR5
;; Очистить эти 16К
;	MOV	#100000, R0
;	MOV	#4096., R1
;12$:	BIS	#33555, (R0)+
;	BIS	#15533, (R0)+
;	SOB	R1, 12$

; Создаём экранную область
	MOVB	#'A, @#<ERRTXT+6>
	MOV	#AREA, @#177530		; ARCRE
	NOP	;!
	TST	AREA
	BMI	ERROR
; Создаём VIEW
	MOVB	#'B, @#<ERRTXT+6>
	MOV	@#<AREA+2>, R0
	MOV	R0, @#AREAID		; Сохраняем для основной программы
	MOV	R0, @#<VIEW+4>		; Area ID
	MOV	#VIEW, @#177530		; VWCRE
	NOP	;!
	MOV	@#VIEW, R0
	BMI	ERROR
	MOV	R0, @#VIEWID		; Сохраняем для основной программы
; Задаём палитру
	MOVB	#'C, @#<ERRTXT+6>
;	MOV	#PALCOM, @#177530	; PLCRE
;	NOP	;!
	MOV	#18., PALCOM		; PLMODx
	MOV	#PALCOM, @#177530
	NOP	;!

; Распаковать экран
	MOV	#040000, R1		; Откуда
	MOV	#SCREEN, R2		; Куда: экран
	CALL	UNLZSA

; Переключаемся на обычный режим памяти
	MOV	@#UR4BAK, @#161230
	MOV	@#UR5BAK, @#161232

; Открываем и загружаем файл сжатого кода
	CALL	LOAMAI

; Распаковать основную программу
	MOV	#HWLZST, R1		; Откуда
	MOV	#START, R2		; Куда
	CALL	UNLZSA

; Переходим в основную программу
	JMP	START

ERROR:	MOV	#ERRTXT,@#177566
	NOP	;!
FINISH:
	MOV	@#UR4BAK, @#161230	; Восстанавливаем UR4
	MOV	@#UR5BAK, @#161232	; и UR5
	CLR	R0			; close all files
	.EXIT

ERRTXT:	.ASCIZ	/ERROR 0/

AREA:	.WORD	46		; Команда ARCRE
	.WORD	SCREEN		; Window buffer address
	.WORD	SCRHEI		; YSize
	.WORD	64.		; XSize
	.WORD	1+140000	; VM2 + PL3
VIEW:	.WORD	4		; Команда VWCRE
	.WORD	0		; View ID
	.WORD	0		; Area ID
	.WORD	4,0		; Vert/horz offset
	.WORD	WINTOP,<WINTOP+SCRHEI-1>	; Top/bottom row
	.WORD	WINLFT,<WINLFT+18.>		; Left/right columns
	.BYTE	1,2		; X/Y scale

	.BLKW	4	;!!! Подобрано так чтобы VARS = 001764, START = 002000

;------------------------------------------------------------------------------
; Эти переменные будут доступны в основной программе

VARS::
UR4BAK:	.WORD	0		; Исходное значение UR4
UR5BAK:	.WORD	0		; Исходное значение UR5
SCRUR4:	.WORD	0		; Значение UR4 для экрана
SCRUR5:	.WORD	0		; Значение UR5 для экрана
AREAID:	.WORD	0		; Area ID
VIEWID:	.WORD	0		; View ID

START::		; Отсюда начинается основная программа

;------------------------------------------------------------------------------
; Эти данные/код будут затёрты при распаковке основной программы

PALCOM:	.WORD	15.		; Команда PLCRE
	.WORD	1+140000	; VM2 + PL3
	.BYTE	003,000,000,000,003,377,000,377
	.BYTE	003,000,377,377,003,303,037,377
	.BYTE	000,000,000,000,000,000,000,000
	.BYTE	377,377,377,377,377,377,377,377

; Подпрограмма: Загрузка сжатого экрана
LOASCR:
	.LOOKUP	#FAREA, #1, #FSPECS	; Открываем файл
	BCC	12$
	MOV	#LOOERR,@#177566
	NOP	;!
	.EXIT
12$:
	.READW	#FAREA, #1, #040000, #<6210./2>, #0	; Читаем данные с диска
	BCC	13$
	MOV	#REAERR,@#177566
	NOP	;!
	.EXIT
13$:
	.CLOSE	#1			; Закрываем файл
	RETURN

; Подпрограмма: Загрузка основной части кода
LOAMAI:
	.LOOKUP	#FAREA, #1, #FSPECZ	; Открываем файл
	BCC	12$
	MOV	#LOOERR,@#177566
	NOP	;!
	.EXIT
12$:
	.READW	#FAREA, #1, #HWLZST, #<<HWLZSZ+1>/2>, #0	; Читаем данные с диска
	BCC	13$
	MOV	#REAERR,@#177566
	NOP	;!
	.EXIT
13$:
	.CLOSE	#1			; Закрываем файл
	RETURN

MEMERR:	.ASCIZ	/SETTOP ERROR/
LOOERR:	.ASCIZ	/LOOKUP ERROR/
REAERR:	.ASCIZ	/READW ERROR/
	.EVEN

FSPECS:	.RAD50	/DK HWYSCR/
	.RAD50	/LZS/
FSPECZ:	.RAD50	/DK HWYENC/
	.RAD50	/LZS/
FAREA:	.BLKW	10

;------------------------------------------------------------------------------

	.END	STBOOT
